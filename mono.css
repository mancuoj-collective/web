/* https://github.com/owickstrom/the-monospace-web/blob/main/src/index.css */
@import url('https://fonts.cdnfonts.com/css/jetbrains-mono-2');

:root {
  --font-family: "JetBrains Mono", monospace;
  --line-height: 1.20rem;
  --border-thickness: 2px;
  --text-color: #000;
  --text-color-alt: #666;
  --background-color: #fff;
  --background-color-alt: #eee;

  --font-weight-normal: 500;
  --font-weight-medium: 600;
  --font-weight-bold: 800;

  font-style: normal;
  font-weight: var(--font-weight-normal);
  font-size: 16px;

  font-family: var(--font-family);
  font-optical-sizing: auto;
  font-variant-numeric: tabular-nums lining-nums;
}

@media (prefers-color-scheme: dark) {
  :root {
    --text-color: #fff;
    --text-color-alt: #aaa;
    --background-color: #000;
    --background-color-alt: #111;
  }
}

* {
  box-sizing: border-box;
}


* + * {
  margin-top: var(--line-height);
}

html {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  margin: 0;
  padding: 0;
  background: var(--background-color);
  color: var(--text-color);
}

body {
  position: relative;
  width: 100%;
  max-width: calc(min(80ch, round(down, 100%, 1ch)));
  margin: 0;
  padding: var(--line-height) 2ch;
  overflow-x: hidden;
  line-height: var(--line-height);
}

@media screen and (max-width: 480px) {
  :root {
    font-size: 14px;
  }
  body {
    padding: var(--line-height) 1ch;
  }
}

h1, h2, h3, h4, h5, h6 {
  margin: calc(var(--line-height) * 2) 0 var(--line-height);
  font-weight: var(--font-weight-bold);
  line-height: var(--line-height);
}

h1 {
  margin-bottom: calc(var(--line-height) * 2);
  font-size: 2rem;
  line-height: calc(2 * var(--line-height));
  text-transform: uppercase;
}
h2 {
  font-size: 1rem;
  text-transform: uppercase;
}

hr {
  display: block;
  position: relative;
  height: var(--line-height);
  margin: calc(var(--line-height) * 1.5) 0;
  border: none;
  color: var(--text-color);
}
hr:after {
  display: block;
  position: absolute;
  top: calc(var(--line-height) / 2 - var(--border-thickness));
  left: 0;
  width: 100%;
  height: 0;
  border-top: calc(var(--border-thickness) * 3) double var(--text-color);
  content: "";
}

a {
  text-decoration-thickness: var(--border-thickness);
}

a:link, a:visited {
  color: var(--text-color);
}

p {
  margin-bottom: var(--line-height);
}

strong {
  font-weight: var(--font-weight-bold);
}
em {
  font-style: italic;
}

sub {
  display: inline-block;
  position: relative;
  width: calc(1ch / 0.75);
  margin: 0;
  font-size: .75rem;
  line-height: 0;
  vertical-align: sub;
}

table {
  position: relative;
  top: calc(var(--line-height) / 2);
  width: calc(round(down, 100%, 1ch));
  margin: 0 0 calc(var(--line-height) * 2);
  border-collapse: collapse;
}

th, td {
  padding: 
    calc((var(--line-height) / 2))
    calc(1ch - var(--border-thickness) / 2)
    calc((var(--line-height) / 2) - (var(--border-thickness)))
  ;
  border: var(--border-thickness) solid var(--text-color);
  line-height: var(--line-height);
  text-align: left;
  vertical-align: top;
}
table tbody tr:first-child > * {
  padding-top: calc((var(--line-height) / 2) - var(--border-thickness));
}


th {
  font-weight: 700;
}
.width-min {
  width: 0%;
}
.width-auto {
  width: 100%;
}

.header {
  margin-bottom: calc(var(--line-height) * 2);
}
.header h1 {
  margin: 0;
}
.header tr td:last-child {
  text-align: right;
}

p {
  word-break: break-word;
  word-wrap: break-word;
  hyphens: auto;
}

img, video {
  display: block;
  width: 100%;
  overflow: hidden;
  object-fit: contain;
}
img {
  color: var(--text-color-alt);
  font-style: italic;
}

details {
  margin-bottom: var(--line-height);
  padding: calc(var(--line-height) - var(--border-thickness)) 1ch;
  border: var(--border-thickness) solid var(--text-color);
}

summary {
  font-weight: var(--font-weight-medium);
  cursor: pointer;
}
details[open] summary {
  margin-bottom: var(--line-height);
}

details ::marker {
  display: inline-block;
  margin: 0;
  content: '▶';
}
details[open] ::marker {
  content: '▼';
}

details :last-child {
  margin-bottom: 0;
}

pre {
  margin: var(--line-height) 0;
  overflow-x: auto;
  overflow-y: hidden;
  white-space: pre;
}
figure pre {
  margin: 0;
}

pre, code {
  font-family: var(--font-family);
}

code {
  font-weight: var(--font-weight-medium);
}

figure {
  margin: calc(var(--line-height) * 2) 3ch;
  overflow-x: auto;
  overflow-y: hidden;
}

figcaption {
  display: block;
  margin-top: var(--line-height);
  font-style: italic;
}

ul, ol {
  margin: 0 0 var(--line-height);
  padding: 0;
}

ul {
  padding: 0 0 0 2ch;
  list-style-type: square;
}
ol {
  padding: 0;
  list-style-type: none;
  counter-reset: item;
}
ol ul,
ol ol,
ul ol,
ul ul {
  margin: 0;
  padding: 0 0 0 3ch;
}
ol li:before { 
  content: counters(item, ".") ". ";
  font-weight: var(--font-weight-medium);
  counter-increment: item;
}

li {
  margin: 0;
  padding: 0;
}

li::marker {
  line-height: 0;
}

::-webkit-scrollbar {
    height: var(--line-height);
}

input, button, textarea {
  width: auto;
  height: calc(var(--line-height) * 2);
  margin: 0;
  padding: 
    calc(var(--line-height) / 2 - var(--border-thickness))
    calc(1ch - var(--border-thickness));
  overflow: visible;
  border: var(--border-thickness) solid var(--text-color);
  background: var(--background-color);
  color: var(--text-color);
  font: inherit;
  font-weight: inherit;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  -webkit-appearance: none;
  appearance: none;
}

input[type=checkbox],
input[type=radio] {
  display: inline-grid;
  place-content: center;
  width: 2ch;
  height: var(--line-height);
  vertical-align: top;
  cursor: pointer;
}
input[type=checkbox]:checked:before,
input[type=radio]:checked:before {
  width: 1ch;
  height: calc(var(--line-height) / 2);
  background: var(--text-color);
  content: "";
}
input[type=radio],
input[type=radio]:before {
  border-radius: 100%;
}

button:focus, input:focus {
  --border-thickness: 3px;
  outline: none;
}

input {
  width: calc(round(down, 100%, 1ch));
}
::placeholder {
  color: var(--text-color-alt);
  opacity: 1;
}
::-ms-input-placeholder {
  color: var(--text-color-alt);
}
button::-moz-focus-inner {
  padding: 0;
  border: 0
}

button {
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
  cursor: pointer;
}

button:hover {
  background: var(--background-color-alt);
}
button:active {
  transform: translate(2px, 2px);
}

label {
  display: block;
  width: calc(round(down, 100%, 1ch));
  height: auto;
  margin: 0;
  font-weight: var(--font-weight-medium);
  line-height: var(--line-height);
}

label input {
  width: 100%;
}

.tree, .tree ul {
  position: relative;
  padding-left: 0;
  line-height: var(--line-height);
  list-style-type: none;
}
.tree ul {
  margin: 0;
}
.tree ul li {
  position: relative;
  margin-left: 1.5ch;
  padding-left: 1.5ch;
  border-left: var(--border-thickness) solid var(--text-color);
}
.tree ul li:before {
  display: block;
  position: absolute;
  top: calc(var(--line-height) / 2);
  left: 0;
  width: 1ch;
  border-bottom: var(--border-thickness) solid var(--text-color);
  content: "";
}
.tree ul li:last-child {
  border-left: none;
}
.tree ul li:last-child:after {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  height: calc(var(--line-height) / 2);
  border-left: var(--border-thickness) solid var(--text-color);
  content: "";
}

.grid {
  --grid-cells: 0;
  display: flex;
  width: calc(round(down, 100%, (1ch * var(--grid-cells)) - (1ch * var(--grid-cells) - 1)));
  margin-bottom: var(--line-height);
  gap: 1ch;
}

.grid > *,
.grid > input {
  flex: 0 0 calc(round(down, (100% - (1ch * (var(--grid-cells) - 1))) / var(--grid-cells), 1ch));
}
.grid:has(> :last-child:nth-child(1)) { --grid-cells: 1; }
.grid:has(> :last-child:nth-child(2)) { --grid-cells: 2; }
.grid:has(> :last-child:nth-child(3)) { --grid-cells: 3; }
.grid:has(> :last-child:nth-child(4)) { --grid-cells: 4; }
.grid:has(> :last-child:nth-child(5)) { --grid-cells: 5; }
.grid:has(> :last-child:nth-child(6)) { --grid-cells: 6; }
.grid:has(> :last-child:nth-child(7)) { --grid-cells: 7; }
.grid:has(> :last-child:nth-child(8)) { --grid-cells: 8; }
.grid:has(> :last-child:nth-child(9)) { --grid-cells: 9; }

/* DEBUG UTILITIES */

.debug .debug-grid {
  --color: color-mix(in srgb, var(--text-color) 10%, var(--background-color) 90%);
  z-index: -1;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0;
  background-image:
    repeating-linear-gradient(var(--color) 0 1px, transparent 1px 100%),
    repeating-linear-gradient(90deg, var(--color) 0 1px, transparent 1px 100%);
  background-size: 1ch var(--line-height);
}

.debug .off-grid {
  background: rgba(255, 0, 0, 0.1);
}

.debug-toggle-label {
  text-align: right;
}
